项目名称：健壮高效易用的数据库查询 API 服务 一、项目概述
构建一套使用 Java（Maven 构建）的高质量 API 服务，主要为前端和其他系统提供多目标数据库查询功能。服务元数据持久化存储于 MySQL/OceanBase，支持多种数据源接入，并具备丰富的测试与可视化调试能力。   二、技术栈 •  后端：Java 17+、Spring Boot 3.x  •  构建工具：Maven  •  持久层：MyBatis 或 Spring Data JPA  •  数据库：MySQL / OceanBase（元数据存储）  •  前端：React 或 Vue.js（前后端分离）  •  测试：JUnit5、Mockito（单元测试），Testcontainers / Spring Boot Test（集成测试）  •  文档与契约：OpenAPI 3.0（Swagger UI）  •  CI/CD：GitHub Actions 或 Jenkins     三、功能需求 1. 数据源管理 1.1 动态数据源接入 •  方式一：调用第三方数据源管理 API，根据入参（如 id或sourceType、credentialsKey）获取目标数据库连接信息。  •  方式二：从本地元数据库（MySQL/OB）中查询对应连接信息（如 datasource_id）。  •  根据调用方式自动切换数据源配置，支持连接池（HikariCP）。   2. SQL 查询服务 2.1 内置静态 SQL •  系统预定义多条 SQL 模板，存储在资源文件，启动后持久化到数据库中，支持动态修改。  •  每条 SQL 拥有唯一标识（sqlCode），可按需扩展新增。   2.2 批量执行 •  单次请求可指定多个 sqlCode，并附带各自参数列表，服务需并发/串行执行后返回汇总结果。  •  返回格式：统一 JSON 数组结构，包含每条 SQL 的执行结果与执行状态。   2.3 可扩展性 •  提供接口或插件机制，允许后续加载动态 SQL（如从脚本中心或配置中心）。   3. API 接口设计 •  规范遵循 RESTful    4. 可视化前端 •  简易调试页面，支持填写连接方式参数、选择 SQL、传入参数、查看返回结果。  •  前后端分离，前端调用后端 OpenAPI，实时渲染 JSON → 表格/树形视图。   5. 其他 API 调用能力 •  服务自身可对外部 REST API 发起调用，封装 HTTP Client（支持 Swagger SDK、Feign 或 RestTemplate/WebClient）。  •  提供注册和管理外部接口配置的能力，确保可扩展。     四、非功能需求 类别 要求   性能 P95 响应时间 < 300ms（单条 SQL）；支持并发量 ≥ 500 QPS  可靠性 幂等设计；失败重试机制（幂等幂数可配置）；熔断与限流  安全 HTTPS；OAuth2.0 / JWT；参数校验与 SQL 注入防护  扩展性 模块化设计；SPI/插件机制；配置中心（Apollo/Consul）  可观测性 Prometheus 指标导出；Grafana 仪表盘；Zipkin/Jaeger 链路追踪；结构化日志  测试覆盖率 单元测试 ≥ 80%；集成测试 ≥ 70%  部署与运维  支持DOCKER 也支持jar；健康检查探针  文档 完整 OpenAPI 文档；示例代码；FAQ 与常见错误码说明
